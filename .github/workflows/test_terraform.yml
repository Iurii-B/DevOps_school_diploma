name: Test

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: prod
  ECR_REPOSITORY: container_repo1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build_and_deploy"
  build_and_deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Cancel Previous Runs               
        uses: styfle/cancel-workflow-action@0.4.1
        with:                                    
          access_token: ${{ github.token }} 
      
      - name: Checkout                                  
        uses: actions/checkout@v2
      
     
      - name: Configure AWS credentials                          
        uses: aws-actions/configure-aws-credentials@v1           
        with:                                                    
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}        
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
    
      - name: Check deployment status
        id: deploy_status
        uses: Consensys/kubernetes-action@master
        with:                                                                                                         
          args: get deploy -n ${{ env.KUBE_NAMESPACE }}
    
      - name: Print deployment status and ENV
        env:
          DEPLOY_STATUS: ${{ steps.deploy_status.outputs.result }}
        run: |
          printenv
          echo  ${{ steps.deploy_status.outputs.result }}
      
      - name: Check if
        if: contains(${{ steps.deploy_status.outputs.result }}, 'flask1-deploy') == 'true'
        run: echo "Deployment exists"
    
      #- name: Rollout new deployment to Kubernetes cluster                                                                            
      #  uses: Consensys/kubernetes-action@master
      #  if: contains(rollout status deploy flask1-deploy -n prod, 'NotFound') == 'true'
      #  with:                                                                                                         
      #    args: create deployment flaskapp1 --image=nginx -n prod
